// Test script pour v√©rifier l'int√©gration frontend-backend
const API_BASE_URL = 'http://127.0.0.1:8000/api';

async function testBackendIntegration() {
    console.log('üß™ Test d\'int√©gration Frontend-Backend');
    console.log('=====================================\n');

    try {
        // Test 1: Inscription
        console.log('1Ô∏è‚É£ Test d\'inscription...');
        const registerResponse = await fetch(`${API_BASE_URL}/auth/register`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                username: 'testuser2',
                email: 'test2@example.com',
                password: 'TestPass123!'
            })
        });
        
        const registerData = await registerResponse.json();
        console.log('‚úÖ Inscription:', registerResponse.status === 201 ? 'SUCC√àS' : '√âCHEC');
        console.log('   R√©ponse:', registerData.message || 'Erreur');
        
        // Test 2: Connexion (avec un utilisateur existant)
        console.log('\n2Ô∏è‚É£ Test de connexion...');
        const loginResponse = await fetch(`${API_BASE_URL}/auth/login`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                username: 'superadmin',
                password: 'admin123'
            })
        });
        
        const loginData = await loginResponse.json();
        console.log('‚úÖ Connexion:', loginResponse.status === 200 ? 'SUCC√àS' : '√âCHEC');
        
        if (loginResponse.ok) {
            const token = loginData.access;
            console.log('   Token re√ßu:', token ? 'OUI' : 'NON');
            
            // Test 3: Acc√®s au profil (authentifi√©)
            console.log('\n3Ô∏è‚É£ Test d\'acc√®s au profil...');
            const profileResponse = await fetch(`${API_BASE_URL}/auth/profil`, {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json',
                }
            });
            
            const profileData = await profileResponse.json();
            console.log('‚úÖ Profil:', profileResponse.status === 200 ? 'SUCC√àS' : '√âCHEC');
            console.log('   Donn√©es:', profileData.user || 'Erreur');
            
            // Test 4: Gestion des r√¥les (superadmin)
            console.log('\n4Ô∏è‚É£ Test de gestion des r√¥les...');
            const rolesResponse = await fetch(`${API_BASE_URL}/auth/roles`, {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json',
                }
            });
            
            const rolesData = await rolesResponse.json();
            console.log('‚úÖ R√¥les:', rolesResponse.status === 200 ? 'SUCC√àS' : '√âCHEC');
            console.log('   Nombre d\'utilisateurs:', rolesData.data?.length || 0);
        }
        
        // Test 5: R√©initialisation de mot de passe
        console.log('\n5Ô∏è‚É£ Test de r√©initialisation de mot de passe...');
        const resetResponse = await fetch(`${API_BASE_URL}/auth/password-reset`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                email: 'test@example.com'
            })
        });
        
        const resetData = await resetResponse.json();
        console.log('‚úÖ Reset password:', resetResponse.status === 200 ? 'SUCC√àS' : '√âCHEC');
        console.log('   Message:', resetData.detail || 'Erreur');
        
    } catch (error) {
        console.error('‚ùå Erreur lors du test:', error.message);
    }
    
    console.log('\nüèÅ Test termin√©');
}

// Ex√©cuter le test
testBackendIntegration();
